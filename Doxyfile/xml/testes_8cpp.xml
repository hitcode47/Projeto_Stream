<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="pt-BR">
  <compounddef id="testes_8cpp" kind="file" language="C++">
    <compoundname>testes.cpp</compoundname>
    <includes refid="cadastrousuario_8hpp" local="yes">cadastrousuario.hpp</includes>
    <includes refid="feedback_8hpp" local="yes">feedback.hpp</includes>
    <includes refid="reproducao_8hpp" local="yes">reproducao.hpp</includes>
    <includes refid="musicas_8hpp" local="yes">musicas.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">fstream</includes>
    <includes local="no">vector</includes>
    <includes local="yes">doctest.h</includes>
    <includes refid="pesquisa_8hpp" local="yes">pesquisa.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>cadastrousuario.hpp</label>
        <link refid="cadastrousuario_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>feedback.hpp</label>
        <link refid="feedback_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>musicas.hpp</label>
        <link refid="musicas_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>pesquisa.hpp</label>
        <link refid="pesquisa_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>reproducao.hpp</label>
        <link refid="reproducao_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>git hub/Projeto_Stream/testes.cpp</label>
        <link refid="testes_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>cctype</label>
      </node>
      <node id="17">
        <label>cstdlib</label>
      </node>
      <node id="21">
        <label>doctest.h</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="15">
        <label>shellapi.h</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="18">
        <label>tchar.h</label>
      </node>
      <node id="16">
        <label>tlhelp32.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="14">
        <label>windows.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="testes_8cpp_1a623b8690a262536536a43eab2d7df03d" prot="public" static="no">
        <name>DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="1" column="9" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;hashSenha gerando hash corretamente&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;hashSenha gerando hash corretamente&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="13" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="13" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1ab7e6c16442b5475bbce74b03bacd4c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Login bem sucedido&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Login bem sucedido&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="23" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="23" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1ac3c8bd99f13ba2ffc6131524ed2d832a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Signup criando novo usuário&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Signup criando novo usuário&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="50" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="50" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1a7a0cfa3a1018c769de753ead3b43e1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;ChangeUsername trocando nome&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;ChangeUsername trocando nome&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="82" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="82" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1a1d770ebc732b000ccdcd5bbad0096b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;DeleteAccount apagando conta&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;DeleteAccount apagando conta&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="119" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="119" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1a0de65abbfc9295e291d5c5893bb205e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Teste da classe Comentario&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Teste da classe Comentario&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="156" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="156" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1acab2ff21683bb5885e8cb5caf05a0c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Teste da classe Curtida&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Teste da classe Curtida&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="198" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="198" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1a47bc4ed173eec49e2d55a44b70dd3b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Pesquisa::Pesquisar&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Pesquisa::Pesquisar&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="257" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="257" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="testes_8cpp_1add6811efa9430990c8d48b4890495547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;Teste da classe reproducao&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;Teste da classe reproducao&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="git hub/Projeto_Stream/testes.cpp" line="274" column="1" bodyfile="git hub/Projeto_Stream/testes.cpp" bodystart="274" bodyend="308"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="testes_8cpp_1a623b8690a262536536a43eab2d7df03d" refkind="member"><highlight class="preprocessor">#define<sp/>DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cadastrousuario_8hpp" kindref="compound">cadastrousuario.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feedback_8hpp" kindref="compound">feedback.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reproducao_8hpp" kindref="compound">reproducao.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="musicas_8hpp" kindref="compound">musicas.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doctest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pesquisa_8hpp" kindref="compound">pesquisa.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;hashSenha<sp/>gerando<sp/>hash<sp/>corretamente&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>password<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;password123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>expectedHash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;123456789&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>actualHash<sp/>=<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(password);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(actualHash<sp/>==<sp/>expectedHash);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="testes_8cpp_1ab7e6c16442b5475bbce74b03bacd4c23" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Login<sp/>bem<sp/>sucedido&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_login" kindref="compound">Login</ref><sp/>login;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>testFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;username\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile.close();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>input(</highlight><highlight class="stringliteral">&quot;username\npassword\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streambuf*<sp/>oldCinBuffer<sp/>=<sp/>std::cin.rdbuf(input.rdbuf());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>login.<ref refid="class_login_1a71d1150a58c73cfa5b863b0a82818718" kindref="member">login</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.rdbuf(oldCinBuffer);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(login.<ref refid="class_login_1ad6d38208d7831f005b8d346d52c63802" kindref="member">getternomedeusuario</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;username&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="testes_8cpp_1ac3c8bd99f13ba2ffc6131524ed2d832a" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Signup<sp/>criando<sp/>novo<sp/>usuário&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_signup" kindref="compound">Signup</ref><sp/>signup;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>input(</highlight><highlight class="stringliteral">&quot;newuser\npassword\npassword\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streambuf*<sp/>oldCinBuffer<sp/>=<sp/>std::cin.rdbuf(input.rdbuf());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>signup.<ref refid="class_signup_1a273422b1f2b92ae4e4b2a93fb201fddb" kindref="member">sign_up</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.rdbuf(oldCinBuffer);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>userFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>username,<sp/>password;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>userExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(userFile,<sp/>username)<sp/>&amp;&amp;<sp/>getline(userFile,<sp/>password))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(username<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;newuser&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>password<sp/>==<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(userExists);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="testes_8cpp_1a7a0cfa3a1018c769de753ead3b43e1b1" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;ChangeUsername<sp/>trocando<sp/>nome&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_change_username" kindref="compound">ChangeUsername</ref><sp/>changeUsername;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>testFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;currentuser\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile.close();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>input(</highlight><highlight class="stringliteral">&quot;currentuser\npassword\nnewuser\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streambuf*<sp/>oldCinBuffer<sp/>=<sp/>std::cin.rdbuf(input.rdbuf());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>changeUsername.<ref refid="class_change_username_1a2006043982d8a994b2cedcad2e23d492" kindref="member">change_username</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.rdbuf(oldCinBuffer);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>userFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>username,<sp/>password;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usernameUpdated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(userFile,<sp/>username)<sp/>&amp;&amp;<sp/>getline(userFile,<sp/>password))<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(username<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;newuser&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usernameUpdated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(usernameUpdated);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="testes_8cpp_1a1d770ebc732b000ccdcd5bbad0096b83" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;DeleteAccount<sp/>apagando<sp/>conta&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_delete_account" kindref="compound">DeleteAccount</ref><sp/>deleteAccount;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/>testFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;existinguser\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>testFile.close();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>input(</highlight><highlight class="stringliteral">&quot;existinguser\npassword\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streambuf*<sp/>oldCinBuffer<sp/>=<sp/>std::cin.rdbuf(input.rdbuf());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteAccount.<ref refid="class_delete_account_1aa4c89e3914bd3b1c59a4257413fab657" kindref="member">delete_account</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cin.rdbuf(oldCinBuffer);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>userFile(</highlight><highlight class="stringliteral">&quot;usuariosenha.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>username,<sp/>password;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>userExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(userFile,<sp/>username)<sp/>&amp;&amp;<sp/>getline(userFile,<sp/>password))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(username<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;existinguser&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>password<sp/>==<sp/><ref refid="cadastrousuario_8cpp_1a8ff1f7ac434763c463e5e6dec529bd81" kindref="member">hashSenha</ref>(</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(!userExists);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="testes_8cpp_1a0de65abbfc9295e291d5c5893bb205e5" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Teste<sp/>da<sp/>classe<sp/>Comentario&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_comentario" kindref="compound">Comentario</ref><sp/>comentario;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>musica<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nome<sp/>da<sp/>Musica&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>usuario<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nome<sp/>do<sp/>Usuario&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>Fazer_comentario&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comentario.<ref refid="class_comentario_1a0b7f18c6857650798a45f9f28da702bc" kindref="member">Fazer_comentario</ref>(musica,<sp/>usuario);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>o<sp/>arquivo<sp/>&quot;FeedBack.txt&quot;<sp/>foi<sp/>criado<sp/>e<sp/>se<sp/>o<sp/>comentário<sp/>foi<sp/>registrado<sp/>corretamente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>arquivo(</highlight><highlight class="stringliteral">&quot;FeedBack.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>linha;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>comentarioEncontrado<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(arquivo,<sp/>linha))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linha.find(musica)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>linha.find(usuario)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comentarioEncontrado<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arquivo.close();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(comentarioEncontrado);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>Ler_comentario&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comentario.<ref refid="class_comentario_1a88f1f7ebdae3ad2d25f98596037aa07f" kindref="member">Ler_comentario</ref>(musica,<sp/>usuario);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>os<sp/>comentários<sp/>são<sp/>lidoscorretamente<sp/>do<sp/>arquivo<sp/>&quot;FeedBack.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Para<sp/>testar<sp/>isso<sp/>usando<sp/>a<sp/>biblioteca<sp/>doctest,<sp/>você<sp/>pode<sp/>usar<sp/>capturar<sp/>a<sp/>saída<sp/>do<sp/>cout<sp/>e<sp/>verificar<sp/>se<sp/>ela<sp/>contém<sp/>os<sp/>comentários<sp/>esperados</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aqui<sp/>está<sp/>um<sp/>exemplo<sp/>simplificado:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>output;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streambuf*<sp/>coutBuffer<sp/>=<sp/>std::cout.rdbuf();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.rdbuf(output.rdbuf());<sp/></highlight><highlight class="comment">//<sp/>Redireciona<sp/>a<sp/>saída<sp/>do<sp/>cout<sp/>para<sp/>o<sp/>stringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comentario.<ref refid="class_comentario_1a88f1f7ebdae3ad2d25f98596037aa07f" kindref="member">Ler_comentario</ref>(musica,<sp/>usuario);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.rdbuf(coutBuffer);<sp/></highlight><highlight class="comment">//<sp/>Restaura<sp/>o<sp/>buffer<sp/>de<sp/>saída<sp/>padrão</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>a<sp/>saída<sp/>contém<sp/>os<sp/>comentários<sp/>esperados</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>outputStr<sp/>=<sp/>output.str();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(outputStr.find(</highlight><highlight class="stringliteral">&quot;Comentarios<sp/>encontrados:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(outputStr.find(</highlight><highlight class="stringliteral">&quot;Nome<sp/>do<sp/>Comentario&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="testes_8cpp_1acab2ff21683bb5885e8cb5caf05a0c5f" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Teste<sp/>da<sp/>classe<sp/>Curtida&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_curtida" kindref="compound">Curtida</ref><sp/>curtida;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>musica<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nome<sp/>da<sp/>Musica&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>usuario<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nome<sp/>do<sp/>Usuario&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>like&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curtida.<ref refid="class_curtida_1af1dd8d47dce341ffbbb53d8b2e1fd585" kindref="member">like</ref>(musica,<sp/>usuario);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>o<sp/>arquivo<sp/>&quot;Curtidas.txt&quot;<sp/>foi<sp/>criado<sp/>e<sp/>se<sp/>o<sp/>like<sp/>foi<sp/>registrado<sp/>corretamente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>arquivo(</highlight><highlight class="stringliteral">&quot;Curtidas.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>linha;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>likeEncontrado<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(arquivo,<sp/>linha))<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linha.find(musica)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>linha.find(usuario)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>linha.find(</highlight><highlight class="stringliteral">&quot;Like&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>likeEncontrado<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arquivo.close();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(likeEncontrado);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>dislike&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curtida.<ref refid="class_curtida_1a51723bda67eb4956fb5cf924b3d02063" kindref="member">dislike</ref>(musica,<sp/>usuario);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>o<sp/>arquivo<sp/>&quot;Curtidas.txt&quot;<sp/>foi<sp/>criado<sp/>e<sp/>se<sp/>o<sp/>dislike<sp/>foi<sp/>registrado<sp/>corretamente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>arquivo(</highlight><highlight class="stringliteral">&quot;Curtidas.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>linha;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dislikeEncontrado<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(arquivo,<sp/>linha))<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linha.find(musica)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>linha.find(usuario)<sp/>!=<sp/>std::string::npos<sp/>&amp;&amp;<sp/>linha.find(</highlight><highlight class="stringliteral">&quot;Dislike&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dislikeEncontrado<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arquivo.close();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(dislikeEncontrado);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>ver_quatidade_curtias&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curtida.<ref refid="class_curtida_1a0fc3ba6710709bc5e9f80a2fba5a10e2" kindref="member">ver_quatidade_curtias</ref>(musica);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>a<sp/>quantidade<sp/>de<sp/>likes<sp/>e<sp/>dislikes<sp/>é<sp/>exibida<sp/>corretamente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Para<sp/>testar<sp/>isso<sp/>usando<sp/>a<sp/>biblioteca<sp/>doctest,<sp/>você<sp/>pode<sp/>usar<sp/>capturar<sp/>a<sp/>saída<sp/>do<sp/>cout<sp/>e<sp/>verificar<sp/>se<sp/>ela<sp/>contém<sp/>as<sp/>informações<sp/>esperadas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aqui<sp/>está<sp/>um<sp/>exemplo<sp/>simplificado:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>output;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streambuf*<sp/>coutBuffer<sp/>=<sp/>std::cout.rdbuf();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.rdbuf(output.rdbuf());<sp/></highlight><highlight class="comment">//<sp/>Redireciona<sp/>a<sp/>saída<sp/>do<sp/>cout<sp/>para<sp/>o<sp/>stringstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curtida.<ref refid="class_curtida_1a0fc3ba6710709bc5e9f80a2fba5a10e2" kindref="member">ver_quatidade_curtias</ref>(musica);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout.rdbuf(coutBuffer);<sp/></highlight><highlight class="comment">//<sp/>Restaura<sp/>o<sp/>buffer<sp/>de<sp/>saída<sp/>padrão</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>a<sp/>saída<sp/>contém<sp/>as<sp/>informações<sp/>esperadas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>outputStr<sp/>=<sp/>output.str();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(outputStr.find(</highlight><highlight class="stringliteral">&quot;Quantidade<sp/>de<sp/>likes:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(outputStr.find(</highlight><highlight class="stringliteral">&quot;Quantidade<sp/>de<sp/>dislikes:&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="testes_8cpp_1a47bc4ed173eec49e2d55a44b70dd3b20" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Pesquisa::Pesquisar&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Encontrar&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pesquisa_1_1_pesquisar" kindref="compound">Pesquisa::Pesquisar</ref><sp/>busca(</highlight><highlight class="stringliteral">&quot;musica&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resultado<sp/>=<sp/>busca.<ref refid="class_pesquisa_1_1_pesquisar_1a5d038ab98b2a2d9f46f24ffde23f99bb" kindref="member">Encontrar</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(resultado<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>musicaEscolhida<sp/>=<sp/>busca.<ref refid="class_pesquisa_1_1_pesquisar_1ad23b58cb66645e13b874c08d3f628aab" kindref="member">Retorno_Pesquisa</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(!musicaEscolhida.empty());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Não<sp/>Encontrar&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pesquisa_1_1_pesquisar" kindref="compound">Pesquisa::Pesquisar</ref><sp/>busca(</highlight><highlight class="stringliteral">&quot;xyz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resultado<sp/>=<sp/>busca.<ref refid="class_pesquisa_1_1_pesquisar_1a5d038ab98b2a2d9f46f24ffde23f99bb" kindref="member">Encontrar</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(resultado<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>musicaEscolhida<sp/>=<sp/>busca.<ref refid="class_pesquisa_1_1_pesquisar_1ad23b58cb66645e13b874c08d3f628aab" kindref="member">Retorno_Pesquisa</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(musicaEscolhida.empty());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274" refid="testes_8cpp_1add6811efa9430990c8d48b4890495547" refkind="member"><highlight class="normal"><ref refid="testes_8cpp_1a96a57a991ba19cec37c8dd8aafa44189" kindref="member">TEST_CASE</ref>(</highlight><highlight class="stringliteral">&quot;Teste<sp/>da<sp/>classe<sp/>reproducao&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreproducao" kindref="compound">reproducao</ref><sp/>player;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>Executar&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nomeArquivo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;musicas.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nomeMusica<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nome<sp/>da<sp/>Musica&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.<ref refid="classreproducao_1aaee16030e0f88b0a772478b53c434656" kindref="member">Executar</ref>(nomeArquivo,<sp/>nomeMusica);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifique<sp/>se<sp/>a<sp/>música<sp/>correta<sp/>foi<sp/>aberta<sp/>para<sp/>reprodução</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Você<sp/>pode<sp/>verificar<sp/>se<sp/>o<sp/>estado<sp/>interno<sp/>da<sp/>classe<sp/>reproducao<sp/>é<sp/>atualizado<sp/>corretamente,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>como<sp/>a<sp/>posição<sp/>atual<sp/>e<sp/>a<sp/>música<sp/>escolhida</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Por<sp/>exemplo,<sp/>você<sp/>pode<sp/>adicionar<sp/>uma<sp/>música<sp/>ao<sp/>arquivo<sp/>&quot;musicas.txt&quot;<sp/>e<sp/>verificar<sp/>se<sp/>a<sp/>música<sp/>é<sp/>executada<sp/>corretamente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usando<sp/>métodos<sp/>auxiliares<sp/>para<sp/>verificar<sp/>o<sp/>estado<sp/>interno<sp/>da<sp/>classe<sp/>reproducao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(player.<ref refid="classreproducao_1ae0cd84dcc0d7bf532151a77a53e9ae61" kindref="member">Retornar_nome</ref>()<sp/>==<sp/>nomeMusica);<sp/></highlight><highlight class="comment">//<sp/>Substitua<sp/>&quot;nomeMusica&quot;<sp/>pelo<sp/>nome<sp/>correto<sp/>da<sp/>música<sp/>a<sp/>ser<sp/>verificada</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>Pular_p_frente&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nomeArquivo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;musicas.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.<ref refid="classreproducao_1a947ed38d15af085a2cdbc03a6b549bd1" kindref="member">Pular_p_frente</ref>(nomeArquivo);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(player.<ref refid="classreproducao_1ae0cd84dcc0d7bf532151a77a53e9ae61" kindref="member">Retornar_nome</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Nova<sp/>Musica&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>SUBCASE(</highlight><highlight class="stringliteral">&quot;Teste<sp/>do<sp/>método<sp/>Pular_p_tras&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nomeArquivo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;musicas.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player.<ref refid="classreproducao_1a4d85cf5155a9ad55e398af4f6d7bd250" kindref="member">Pular_p_tras</ref>(nomeArquivo);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK(player.<ref refid="classreproducao_1ae0cd84dcc0d7bf532151a77a53e9ae61" kindref="member">Retornar_nome</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Musica<sp/>Anterior&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="git hub/Projeto_Stream/testes.cpp"/>
  </compounddef>
</doxygen>
